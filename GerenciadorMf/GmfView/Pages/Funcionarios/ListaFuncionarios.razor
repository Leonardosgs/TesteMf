@page "/funcionarios"
@using GmfApi.Models.Entities;
@using GmfView.Service;

@inject IFuncionarioService funcionarioService

<h1>Funcionários</h1>

<br/>

@if(Funcionarios == null)
{
    <p><em>Loading...</em></p>
}
else
{
        <button type="submit" class="btn btn-success" 
                @onclick="@(()=> navigation.NavigateTo("funcionarios/createFuncionario"))">
                @ButtonTextSubmit
         </button>
         <button type="submit" class="btn btn-success" 
                @onclick="@(()=> navigation.NavigateTo("/Funcionarios/createFuncionarioObra"))">
                @ButtonTextSubmit
         </button>
    <br/>
    <table class='table'>
        <thead>
            <tr>
                <th>Nome</th>
                <th>Data de Nascimento</th>
                <th>Rg</th>
                <th>Salario</th>
                <th>Cargo</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var funcionario in Funcionarios)
            {
                <tr>
                    <th>@funcionario.Nome</th>
                    <th>@funcionario.DataNascimento</th>
                    <th>@funcionario.Rg</th>
                    <th>@funcionario.Salario</th>
                    <th>@funcionario.Cargo.Nome</th>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Inject]
    private NavigationManager navigation { get; set; }

    [Parameter]
    public string ButtonTextSubmit { get; set; } = "Adicionaro funcionário";

    public IEnumerable<Funcionario> Funcionarios { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await GetFuncionarios();
    }

    protected async Task GetFuncionarios()
    {
        Funcionarios = await funcionarioService.GetFuncionarios();
    }
}